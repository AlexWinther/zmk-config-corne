/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // slightly increased for more reliable shifts
            require-prior-idle-ms = <100>; // helps with rapid key sequences
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        shift_capsword: shift_capsword {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPSWORD";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT>, <&caps_word>;
        };

        lt_backspace: lt_backspace {
            compatible = "zmk,behavior-tap-dance";
            label = "LT_BACKSPACE";
            #binding-cells = <0>;
            bindings = <&lt 1 BACKSPACE>, <&kp LA(BACKSPACE)>;
        };
    };

    macros {
        backout: backout {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp DOT>,
                <&macro_tap>,
                <&kp DOT>,
                <&macro_tap>,
                <&kp SLASH>;
        };

        tmux_leader: tmux_leader {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "TMUX_LEADER";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  F  |  P  |  D   |  L  |  X  |   |  ;  |   U   |  O  |  Y  |  B  |  Z   |
            // | CTRL |  S  |  N  |  T   |  H  |  K  |   |  ,  |   A   |  E  |  I  |  C  |  Q   |
            // | \    |  V  |  W  |  G   |  M  |  J  |   |  -  |   .   |  '  |  =  |  /  | ESC  |
            //                    | BSPC |  R  | RET |   | ESC | SPACE | TAB |

            bindings = <
&kp TAB                       &kp Q       &kp W       &kp E               &kp R             &kp T      &kp Y      &kp U              &kp I                &kp O       &kp P               &kp LBKT
&mt LS(LA(LEFT_CONTROL)) ESC  &ht LGUI A  &ht LALT S  &ht LEFT_CONTROL D  &ht LEFT_SHIFT F  &kp G      &kp H      &ht RIGHT_SHIFT J  &ht RIGHT_CONTROL K  &ht RALT L  &ht RGUI SEMICOLON  &kp SQT
&kp LEFT_CONTROL              &kp Z       &kp X       &kp C               &kp V             &kp B      &kp N      &kp M              &kp COMMA            &kp PERIOD  &kp SLASH           &kp RIGHT_GUI
                                                      &shift_capsword     &lt 2 SPACE       &kp TAB    &kp ENTER  &lt_backspace      &tmux_leader
            >;
        };

        number {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  +  |  7  |  8  |  9  |  *  |   |     |     |     |     |     | BSPC |
            // | CTRL |  =  |  1  |  2  |  3  |  0  |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |  -  |  4  |  5  |  6  |  /  |   |     |     |     |     |     |      |
            //                    |BSPC | SPACE | RET |   | ESC |     | TAB |

            bindings = <
&trans  &kp PLUS   &kp N7  &kp N8  &kp N9  &kp ASTRK    &trans    &trans    &trans  &trans     &trans  &trans
&trans  &kp EQUAL  &kp N1  &kp N2  &kp N3  &kp N0       &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &kp MINUS  &kp N4  &kp N5  &kp N6  &kp SLASH    &trans    &trans    &trans  &trans     &trans  &trans
                           &trans  &trans  &trans       &trans    &trans    &trans
            >;
        };

        symbol {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  %  |  [  |  ]  |  $  |  &  |   |  .  |  "  |  <  |  >  |  '  | BSPC |
            // | CTRL |  ?  |  (  |  )  |  :  |  |  |   |  #  |  =  |  +  |  -  |  !  | CTRL |
            // | SHFT |  @  |  {  |  }  |  ~  |     |   | ../ |  \  |  *  |  /  |  ^  | SHFT |
            //                    |BSPC |     | RET |   | ESC |     | TAB |

            bindings = <
&trans  &kp SQT          &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES     &kp GRAVE      &kp AMPERSAND  &kp UNDERSCORE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT    &trans
&trans  &kp EXCLAMATION  &kp MINUS      &kp PLUS          &kp EQUAL             &kp HASH       &kp PIPE       &kp COLON       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON  &kp DOUBLE_QUOTES
&trans  &kp CARET        &kp SLASH      &kp ASTERISK      &kp NON_US_BACKSLASH  &kp AT_SIGN    &kp TILDE      &kp DOLLAR      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp QUESTION   &trans
                                        &trans            &trans                &trans         &trans         &trans          &trans
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |     | VD  | VU  | BD  | BU  |   |     | PRV | PLY | NXT |     | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &trans        &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_DEC  &kp C_BRI_INC    &trans    &kp C_PREV  &kp C_PP  &kp C_NEXT  &trans  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4     &kp LEFT  &kp DOWN    &kp UP    &kp RIGHT   &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans         &trans           &trans    &trans      &trans    &trans      &trans  &bootloader
                                        &trans        &trans         &trans           &trans    &trans      &trans
            >;
        };
    };
};
